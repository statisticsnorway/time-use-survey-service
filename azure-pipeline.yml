name: $(Build.SourceBranch)-$(date:yyyyMMdd)$(rev:.r)
# Pipeline triggers on any branch and tag
trigger:
  branches:
    include:
      - main
      - master
  tags:
    include:
      - '*'

# Pipeline will be run on this base image
pool:
  vmImage: 'ubuntu-latest'

# Variables global to this pipeline
# https://docs.microsoft.com/en-us/azure/devops/pipelines/process/variables
variables:
  # Variables defined in Pipelines->Library->Variable Groups in your project in
  # Azure Pipelines
  - group: Hemmeligheter
  # Variables defined here
#  - name: fullSha
#    value: '$(Build.SourceVersion)'
  - name: imageName
    value: 'eu.gcr.io/prod-bip/ssb/tidsbruk/time-use-survey-service'
  - name: repoName
    value: 'prod-bip/ssb/tidsbruk/time-use-survey-service'
  - name: masterTag
    value: "refs/heads/main"

#  - name: imageTagBeforeVulnerabilityScan
#    value: 'imagescan-$(Build.SourceBranchName)-$(fullSha)'
#  - name: imageTagAfterVulnerabilityScan
#    value: $(Build.SourceBranchName)-$(fullSha)
#  - name:  MAVEN_CACHE_FOLDER
#    value: $(Pipeline.Workspace)/.m2/repository
#  - name: MAVEN_OPTS
#    value: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'


resources:
  repositories:
    - repository: templates
      type: github
      name: statisticsnorway/azure-pipelines-templates
#      ref: refs/tags/1.1.19
      ref: main-branch-treated-as-master
      endpoint: github-Tidsbruksprosjektet

# Job which runs mvn test and verify, Sonar Analysis (if branch is master), mvn install,
# builds Docker image, pushes this to GCR and checks for any image vulnerabilities
jobs:
  - template: complete-builds/job-test-coverage-build-gcr.yml@templates
    parameters:
      project: forbruk
      imageName: $(imageName)
      repoName: $(repoName)
      artifactName: time-use-survey-service
      mavenContainer: maven:3-openjdk-15
      checkStyleRunAnalysis: false


#  # Pull and retag docker image. Will only run if it is a tag-operation on the repo.
#  # See https://github.com/statisticsnorway/azure-pipelines-templates/blob/master/docker/docker-tag-for-production.yml
#  - template: docker/docker-tag-for-production.yml@templates
#    parameters:
#      tagToTag: 'master-$(fullSha)'
#      gcrImageName: $(imageName)
